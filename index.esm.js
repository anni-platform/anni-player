import{useMemo as t,useRef as e,useReducer as r,useCallback as n,useEffect as c}from"react";import o from"react-use/lib/useKey";import u from"react-use/lib/useVideo";const a=24,i=t=>new Promise((e,r)=>{const n=new Image;n.onload=()=>e({[t]:n}),n.onerror=t=>r(t),n.src=t}),s=(t,e)=>({...t,...e});function l(t){try{const e=t.split("/").pop(),[r]=e.split("."),[n]=/\d+/.exec(r);if(!n)throw Error();return parseInt(n,10)}catch(e){console.error(`"${t}" does not contain a valid frame index`)}}function d(t,e){return l(t)-l(e)}function m({playerId:l="anni-player",audioSrc:m,audioStart:g=0,fps:f=a,frames:h=[]}){const p=t(()=>h.sort(d),[h]),w=e(null),y=e(null),S=e(function(t){try{return parseInt(sessionStorage.getItem(t))||0}catch(t){return 0}}(l)),I=e(),P=e(null),[A,F]=r(s,{currentFrame:S.current,isPlaying:!1,isMuted:!1,volume:.75,htmlImageElements:[],loadingStatus:{totalLoaded:0,total:h.length},duration:h.length/f});if(!y.current){const t=document.createElement("audio");t.src=m,t.currentTime=g,y.current=t}const{isPlaying:v}=A,x=n((t=.75)=>{y.current&&(F({volume:t}),y.current.volume=t)},[y]),L=n(()=>{if(!y.current)return;const t=!y.current.muted;F({isMuted:t}),y.current.muted=t},[y]),M=n(t=>{if(!p[t]||!P.current)return;const e=w.current[p[t]],{width:r,height:n}=e;F({currentFrame:t});const c=P.current;c.width=r,c.height=n,c.getContext("2d").drawImage(e,0,0,r,n,0,0,r,n)},[p,P,w]);function b(){const t=w.current&&Object.keys(w.current).length>0&&!v;F({isPlaying:t})}function E(t){F({isPlaying:!1}),S.current=t,y.current.currentTime=(t/h.length*A.duration).toFixed(2),M(t)}return c(()=>{P.current&&async function(){F({loadingStatus:{total:p.length,totalLoaded:0}});const t=await Promise.all(p.map(async t=>{const e=await i(t);return F({loadingStatus:{...A.loadingStatus,totalLoaded:A.loadingStatus.totalLoaded+=1}}),new Promise(t=>{t(e)})}));if(!t||0===t.length)return;w.current=t.reduce((t,e)=>({...t,...e}),{});const e=w.current[p[0]];if(!e)return;const{width:r,height:n}=e;F({frameSize:{width:r,height:n}}),M(S.current)}()},[h,P,p,M]),c(()=>{if(y.current)return v&&y.current.paused?async function(){await y.current.play()}().catch(()=>null):v||y.current.paused||t().catch(()=>null),function(){t().catch(()=>null)};async function t(){await y.current.pause()}},[y,v]),c(()=>{if(v){let t,e,r=performance.now();const n=()=>{if(!v)return;t=performance.now(),e=t-r;const c=Math.round(1e3/f);if(e>c){const e=S.current;r=t;const n=e===h.length-1?0:e+1;0===n&&(y.current.currentTime=g),S.current=n,M(S.current)}I.current=requestAnimationFrame(n)};n()}else I.current&&cancelAnimationFrame(I.current);return()=>{I.current&&cancelAnimationFrame(I.current),sessionStorage.setItem(l,S.current)}},[f,h,w,M,l,v]),o(t=>"Space"===t.code,b),o(t=>"ArrowRight"===t.code,function(){const t=S.current;E(t===h.length-1?0:t+1)}),o(t=>"ArrowLeft"===t.code,function(){const t=S.current;E(0===t?h.length-1:t-1)}),{...A,canvasRef:P,togglePlay:b,sortedFrames:p,toggleMuteAudio:L,seek:E,setAudioVolume:x,useVideo:u}}export{l as extractFrameIndexFromPath,m as useCanvasScrubber};
